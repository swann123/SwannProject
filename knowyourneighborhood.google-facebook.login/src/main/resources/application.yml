spring:
  datasource:
        url: jdbc:mysql://localhost:3306/db_springboot_login_knowyourneighborhood?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
        username: root
        password: swann1
  jpa:
        show-sql: true
        hibernate:
            ddl-auto: update
            naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
        properties:
            hibernate:
                dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  security:
      oauth2:
        client:
          registration:
            google:
              clientId: 179458563769-st87eqatofigliiev415dhu4b3ovskcj.apps.googleusercontent.com
              clientSecret: KBOScg4h3EnG7ReKqrqL1in7
              redirectUri: http://localhost:9099/oauth2/callback/google
              scope:
                - email
                - profile
           
                
app:
  auth:
    tokenSecret: bAcb2GXz9fWtzfVv
    tokenExpirationMsec: 86400000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      
      
      
      